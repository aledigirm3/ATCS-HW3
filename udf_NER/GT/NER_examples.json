[
  {
    "unique_id": "ner_udf_01",
    "database_id": "student_club",
    "table_schema": "CREATE TABLE member (  member_id INTEGER PRIMARY KEY,  first_name TEXT,  last_name TEXT,  join_date DATE,  bio TEXT,  email TEXT)",
    "question": "For the member with member_id = 21, extract all entities of type PER (person), LOC (location), and ORG (organization) in the bio field.",
    "hypothetical_relevant_data": [
      {
        "member_id": 21,
        "bio": "Alice Rossi joined from Italy after an exchange period at the University of Cambridge."
      }
    ],
    "expected_result": {
      "PER": [
        "Alice Rossi"
      ],
      "LOC": [
        "Italy"
      ],
      "ORG": [
        "University of Cambridge"
      ]
    },
    "udf_justification": "The bio field mixes proper names, countries, and institutions in free text; only an LLM-NER UDF can reliably recognize and classify PER, LOC, and ORG."
  },
  {
    "unique_id": "ner_udf_02",
    "database_id": "student_club",
    "table_schema": "CREATE TABLE project (  project_id INTEGER PRIMARY KEY,  project_name TEXT,  description TEXT,  start_date DATE,  end_date DATE,  lead_member_id INTEGER)",
    "question": "For the project with project_id = 12, extract all ORG (organization) entities mentioned in the description.",
    "hypothetical_relevant_data": [
      {
        "project_id": 12,
        "description": "The project collaborates with UNICEF and uses AWS and Azure cloud infrastructure for deployment."
      }
    ],
    "expected_result": [
      "UNICEF",
      "AWS",
      "Azure"
    ],
    "udf_justification": "The description contains organization names and cloud services in unstructured text; an LLM-NER UDF is required to correctly identify and classify these ORG entities."
  },
  {
    "unique_id": "ner_udf_03",
    "database_id": "codebase_community",
    "table_schema": "CREATE TABLE comments (  Id INTEGER PRIMARY KEY,  PostId INTEGER,  Score INTEGER,  Text TEXT,  CreationDate DATETIME,  UserId INTEGER)",
    "question": "For the comment with Id = 515, extract all LOC (location) entities mentioned in the Text.",
    "hypothetical_relevant_data": [
      {
        "Id": 515,
        "Text": "Come visit us at our Berlin office or drop by the Paris branch."
      }
    ],
    "expected_result": [
      "Berlin",
      "Paris"
    ],
    "udf_justification": "The Text field is free text with references to cities; an LLM-NER UDF is required to recognize and normalize the LOC entities."
  },
  {
    "unique_id": "ner_udf_004",
    "database_id": "codebase_community",
    "table_schema": "CREATE TABLE posts (  Id INTEGER PRIMARY KEY,  PostTypeId INTEGER,  CreationDate DATETIME,  Score INTEGER,  ViewCount INTEGER,  Body TEXT,  OwnerUserId INTEGER,  Title TEXT,  Tags TEXT)",
    "question": "For the post with Id = 128, extract all programming language names mentioned in the Body.",
    "hypothetical_relevant_data": [
      {
        "Id": 128,
        "Body": "In the project introduction I used Python for preprocessing, while for the backend I wrote APIs in Go and a frontend service in TypeScript."
      }
    ],
    "expected_result": [
      "Python",
      "Go",
      "TypeScript"
    ],
    "udf_justification": "The Body field is free text: SQL cannot automatically recognize and classify programming language names within the text; an LLM-based NER UDF is required to extract these entities."
  },
  {
    "unique_id": "ner_udf_005",
    "database_id": "codebase_community",
    "table_schema": "CREATE TABLE comments (  Id INTEGER PRIMARY KEY,  PostId INTEGER,  Score INTEGER,  Text TEXT,  CreationDate DATETIME,  UserId INTEGER)",
    "question": "In the comment with Id = 314, extract all person names mentioned in the Text.",
    "hypothetical_relevant_data": [
      {
        "Id": 314,
        "Text": "Special thanks to Maria Rossi and Luca Bianchi for the detailed feedback!"
      }
    ],
    "expected_result": [
      "Maria Rossi",
      "Luca Bianchi"
    ],
    "udf_justification": "The Text field contains personal proper names in free form; only an LLM-NER model can correctly segment the tokens and recognize the PERSON entities."
  },
  {
    "unique_id": "ner_udf_006",
    "database_id": "student_club",
    "table_schema": "CREATE TABLE event (  event_id TEXT PRIMARY KEY,  event_name TEXT,  event_date DATE,  type TEXT,  notes TEXT,  location TEXT,  status TEXT)",
    "question": "For the event with event_id = 'E100', which LOC (location) and ORG (organization) entities appear in the notes?",
    "hypothetical_relevant_data": [
      {
        "event_id": "E100",
        "notes": "The meeting point will be at Central Park of Milan, organized by the Milan Hiking Club and sponsored by the Municipality of Milan."
      }
    ],
    "expected_result": {
      "LOC": [
        "Central Park of Milan"
      ],
      "ORG": [
        "Milan Hiking Club",
        "Municipality of Milan"
      ]
    },
    "udf_justification": "The notes include a mix of places and organizations in free text; an LLM-NER UDF is required to segment the sentences and classify LOC vs ORG entities."
  },
  {
    "unique_id": "ner_udf_007",
    "database_id": "student_club",
    "table_schema": "CREATE TABLE expense (  expense_id INTEGER PRIMARY KEY,  expense_description TEXT,  expense_date DATE,  approved BOOLEAN,  link_to_member INTEGER,  link_to_budget INTEGER)",
    "question": "For the expense with expense_id = 502, extract all organization (ORG) and location (LOC) names mentioned in expense_description.",
    "hypothetical_relevant_data": [
      {
        "expense_id": 502,
        "expense_description": "Invoice payment for catering by Eventi Gourmet Ltd at the Castle of Rivoli, plus equipment rental from Allestimenti Roma."
      }
    ],
    "expected_result": {
      "ORG": [
        "Eventi Gourmet Ltd",
        "Allestimenti Roma"
      ],
      "LOC": [
        "Castle of Rivoli"
      ]
    },
    "udf_justification": "The expense_description field is free text that mixes company names and places in narrative form; only an LLM-NER UDF can correctly segment and classify these entities."
  },
  {
    "unique_id": "ner_udf_008",
    "database_id": "student_club",
    "table_schema": "CREATE TABLE income (  income_id INTEGER PRIMARY KEY,  date_received DATE,  amount DECIMAL,  source TEXT,  notes TEXT,  link_to_member INTEGER)",
    "question": "For the income with income_id = 317, extract the person (PER) and organization (ORG) names mentioned in notes.",
    "hypothetical_relevant_data": [
      {
        "income_id": 317,
        "notes": "Received a contribution from the Cariplo Foundation and a private donation from Giulia Verdi for the project."
      }
    ],
    "expected_result": {
      "ORG": [
        "Cariplo Foundation"
      ],
      "PER": [
        "Giulia Verdi"
      ]
    },
    "udf_justification": "The notes field is free text and contains both company entities and personal names; an LLM-NER UDF is required to split and correctly recognize both categories."
  },
  {
    "unique_id": "ner_udf_009",
    "database_id": "codebase_community",
    "table_schema": "CREATE TABLE postHistory (  Id INTEGER PRIMARY KEY,  PostHistoryTypeId INTEGER,  PostId INTEGER,  RevisionGUID TEXT,  CreationDate DATETIME,  UserId INTEGER,  Text TEXT,  Comment TEXT,  UserDisplayName TEXT)",
    "question": "For the post history entry with Id = 2048, list all dates mentioned in the Text field.",
    "hypothetical_relevant_data": [
      {
        "Id": 2048,
        "Text": "Edit made on 2025-06-01; original deadline set for July 1, 2025, final revision on 2025-07-15."
      }
    ],
    "expected_result": [
      "2025-06-01",
      "July 1, 2025",
      "2025-07-15"
    ],
    "udf_justification": "The Text field is narrative text containing multiple temporal references in different formats; SQL cannot normalize or extract dates mentioned in free-form sentences, whereas an LLM-NER UDF can recognize and standardize the DATE references."
  },
  {
    "unique_id": "ner_udf_010",
    "database_id": "codebase_community",
    "table_schema": "CREATE TABLE users (  Id INTEGER PRIMARY KEY,  Reputation INTEGER,  CreationDate DATETIME,  DisplayName TEXT,  LastAccessDate DATETIME,  WebsiteUrl TEXT,  Location TEXT,  AboutMe TEXT,  Views INTEGER,  UpVotes INTEGER,  DownVotes INTEGER)",
    "question": "For the user with Id = 85, extract all LOC (location) and ORG (organization) entities mentioned in the AboutMe field.",
    "hypothetical_relevant_data": [
      {
        "Id": 85,
        "AboutMe": "I am a researcher at CERN and previously worked with ESA. I was born in Switzerland and have lived in France."
      }
    ],
    "expected_result": {
      "LOC": [
        "Switzerland",
        "France"
      ],
      "ORG": [
        "CERN",
        "ESA"
      ]
    },
    "udf_justification": "The AboutMe field is free text and contains place names and organizations in narrative prose; an LLM-NER UDF is required to segment and correctly classify LOC and ORG."
  }
]

