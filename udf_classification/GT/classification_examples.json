[
  {
    "unique_id": "classification_001",
    "database_id": "codebase-posts.csv",
    "table_schema": "CREATE TABLE posts (id INTEGER PRIMARY KEY,body TEXT)",
    "question": "Classify the post into a specific and single topic.",
    "expected_result":[
      {"id": 60822, "topic": "logistic-regression"},
      {"id": 22227, "topic": "bayesian-probability"},
      {"id": 111387, "topic": "regression-modeling"},
      {"id": 102898, "topic": "data-visualization"},
      {"id": 4235, "topic": "probability-theory"},
      {"id": 25434, "topic": "causal-inference"},
      {"id": 92683, "topic": "mixed-effects-models"},
      {"id": 41337, "topic": "multinomial-logistic-regression"},
      {"id": 4633, "topic": "probability-distributions"},
      {"id": 77809, "topic": "statistical-learning"},
      {"id": 13489, "topic": "regression-confidence-intervals"},
      {"id": 30081, "topic": "model-validation"},
      {"id": 47384, "topic": "humor"},
      {"id": 30567, "topic": "statistical-testing"},
      {"id": 21246, "topic": "likelihood-ratio-test"},
      {"id": 52802, "topic": "statistical-computing"},
      {"id": 17797, "topic": "statistical-tables"},
      {"id": 8053, "topic": "chi-square-test"},
      {"id": 27441, "topic": "regression-confounding"},
      {"id": 108379, "topic": "model-fitting"}
    ],
    "udf_justification": ""
  },
  {
    "unique_id": "classification_002",
    "database_id": "codebase-users.csv",
    "table_schema": "CREATE TABLE users (id INTEGER PRIMARY KEY,location TEXT)",
    "question": "Identify the geographical environment of the city.",
    "expected_result": [
      {"id": "48522", "environment": "inland-city"},
      {"id": "35214", "environment": "inland-city"},
      {"id": "12528", "environment": "suburban-coastal"},
      {"id": "11523", "environment": "coastal-city"},
      {"id": "40435", "environment": "country-wide"},
      {"id": "30767", "environment": "inland-city"},
      {"id": "55274", "environment": "country-wide"},
      {"id": "46483", "environment": "coastal-city"},
      {"id": "47993", "environment": "inland-city"},
      {"id": "25717", "environment": "mixed-region"},
      {"id": "24303", "environment": "mixed-region"},
      {"id": "40637", "environment": "country-wide"},
      {"id": "45996", "environment": "coastal-city"},
      {"id": "43590", "environment": "coastal-city"},
      {"id": "25186", "environment": "suburban-coastal"},
      {"id": "13892", "environment": "inland-city"},
      {"id": "44730", "environment": "coastal-city"},
      {"id": "25401", "environment": "inland-city"},
      {"id": "1185", "environment": "country-wide"},
      {"id": "41238", "environment": "coastal-city"}
    ],
    "udf_justification": ""
  },
  {
    "unique_id": "classification_003",
    "database_id": "superhero-superhero.csv",
    "table_schema": "CREATE TABLE superhero (id INTEGER PRIMARY KEY,full_name TEXT)",
    "question": "Identify the nationality of superhero.",
    "expected_result": [
      {"id": 36, "nationality": "ancient-egyptian"},
      {"id": 581, "nationality": "american"},
      {"id": 640, "nationality": "american"},
      {"id": 76, "nationality": "american"},
      {"id": 545, "nationality": "american"},
      {"id": 633, "nationality": "american"},
      {"id": 631, "nationality": "native-american"},
      {"id": 696, "nationality": "british"},
      {"id": 742, "nationality": "canadian"},
      {"id": 509, "nationality": "american"},
      {"id": 725, "nationality": "american"},
      {"id": 268, "nationality": "american"},
      {"id": 5, "nationality": "american"},
      {"id": 363, "nationality": "british"},
      {"id": 102, "nationality": "american"},
      {"id": 732, "nationality": "native-american"},
      {"id": 259, "nationality": "kryptonian"},
      {"id": 35, "nationality": "british"},
      {"id": 239, "nationality": "american"},
      {"id": 475, "nationality": "american"}
    ],
    "udf_justification": ""
  },
  {
    "unique_id": "classification_004",
    "database_id": "trombosis-patient.csv",
    "table_schema": "CREATE TABLE patient (id INTEGER PRIMARY KEY,diagnosis TEXT)",
    "question": "Identify the full-string of diagnosis acronym.",
    "expected_result":
      [
        {"id": 4989817, "full-string": "stevens-johnson-syndrome"},
        {"id": 2202466, "full-string": "systemic-lupus-erythematosus, antiphospholipid-syndrome"},
        {"id": 4298902, "full-string": "behcet-disease"},
        {"id": 5815773, "full-string": "systemic-lupus-erythematosus suspected"},
        {"id": 1513136, "full-string": ""},
        {"id": 5803662, "full-string": "rheumatoid-arthritis suspected"},
        {"id": 5246289, "full-string": "systemic-lupus-erythematosus, stevens-johnson-syndrome"},
        {"id": 3607653, "full-string": "systemic-lupus-erythematosus"},
        {"id": 5571286, "full-string": "stevens-johnson-syndrome, mixed-connective-tissue-disease suspected"},
        {"id": 4712028, "full-string": "behcet-disease"},
        {"id": 154143, "full-string": "rheumatoid-arthritis"},
        {"id": 2371753, "full-string": "rheumatoid-arthritis"},
        {"id": 4621629, "full-string": "rheumatoid-arthritis"},
        {"id": 5601367, "full-string": "behcet-disease"},
        {"id": 2982146, "full-string": "takayasu-arteritis"},
        {"id": 1334643, "full-string": "systemic-lupus-erythematosus suspected, stevens-johnson-syndrome suspected"},
        {"id": 1945616, "full-string": "mixed-connective-tissue-disease, polymyositis"},
        {"id": 4843434, "full-string": "systemic-lupus-erythematosus"},
        {"id": 3042029, "full-string": "systemic-lupus-erythematosus, stevens-johnson-syndrome, polymyositis"},
        {"id": 5566219, "full-string": "polymyositis, stevens-johnson-syndrome"}
      ],
    "udf_justification": ""
  },
  {
    "unique_id": "classification_005",
    "database_id": "card_games-cards.csv",
    "table_schema": "CREATE TABLE cards (id INTEGER PRIMARY KEY,originaltext TEXT)",
    "question": "Identify if the action of card must be executed by player or opponents.",
    "expected_result":
    [
      {"id": 54296, "action": "player"},
      {"id": 49175, "action": "player"},
      {"id": 9964, "action": "player"},
      {"id": 18341, "action": "player"},
      {"id": 33572, "action": "player"},
      {"id": 39801, "action": "player"},
      {"id": 18472, "action": "opponents"},
      {"id": 29356, "action": "player"},
      {"id": 12561, "action": "player"},
      {"id": 17846, "action": "player"},
      {"id": 16060, "action": "player"},
      {"id": 56537, "action": "player"},
      {"id": 25489, "action": "player"},
      {"id": 20595, "action": "player"},
      {"id": 19031, "action": "player"},
      {"id": 21522, "action": "player"},
      {"id": 2636, "action": "player"},
      {"id": 4258, "action": "opponents"},
      {"id": 28331, "action": "player"},
      {"id": 9225, "action": "opponents"}
    ],
    "udf_justification": ""
  }
]